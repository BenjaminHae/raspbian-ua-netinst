#!/bin/busybox sh

# default options, can be overriden in installer-config.txt
preset=server
mirror=http://mirrordirector.raspbian.org/raspbian/
release=wheezy
hostname=pi
rootpw=raspbian
cdebootstrap_cmdline=
bootsize=+50M
timeserver=time.nist.gov
ip_addr=dhcp
ip_netmask=0.0.0.0
ip_broadcast=0.0.0.0
ip_gateway=0.0.0.0
ip_nameservers=

mkdir -p /proc
mkdir -p /sys
mkdir -p /usr/bin
mkdir -p /usr/sbin
mkdir -p /var/run
mkdir -p /rootfs/boot
mkdir -p /bootfs

/bin/busybox --install

export PATH=/bin:/sbin:/usr/bin

mount -t proc none /proc
mount -t sysfs none /sys

echo /sbin/mdev > /proc/sys/kernel/hotplug
mdev -s

klogd -c 1

echo "==========================================="
echo "raspbian-ua-netinst"
echo "==========================================="
echo "Revision __VERSION__"
echo "Built on __DATE__"
echo "==========================================="
echo "http://github.com/hifi/raspbian-ua-netinst/"
echo "==========================================="

echo -n "Copying boot files... "
# copy boot data to safety if not fetching them
mount /dev/mmcblk0p1 /boot || exit
cp /boot/* /bootfs/ || exit
umount /boot || exit
echo "OK"

if [ -e /bootfs/installer-config.txt ]; then
    echo "Reading installer-config.txt..."
    source /bootfs/installer-config.txt
fi

dhcp_packages=
if [ "$ip_addr" = "dhcp" ]; then
    dhcp_packages=,isc-dhcp-client
fi

# configure different kinds of presets
if [ "$cdebootstrap_cmdline" = "" ]; then

    # minimal
    cdebootstrap_cmdline="--flavour=minimal --include=fake-hwclock,ifupdown,net-tools,openntpd,openssh-server$dhcp_packages"

    case $preset in
        server)
            cdebootstrap_cmdline="$cdebootstrap_cmdline,vim-tiny,iputils-ping,wget,ca-certificates,rsyslog,cron,dialog,locales,less,man-db" ;;
        minimal)
            ;;
        base)
            cdebootstrap_cmdline="--flavour=minimal" ;;
        *)
            preset=server
    esac

else
    preset=none
fi

echo
echo "Installer configuration:"
echo "  preset = $preset"
echo "  mirror = $mirror"
echo "  release = $release"
echo "  hostname = $hostname"
echo "  rootpw = $rootpw"
echo "  cdebootstrap_cmdline = $cdebootstrap_cmdline"
echo "  bootsize = $bootsize"
echo "  timeserver = $timeserver"
echo "  ip_addr = $ip_addr"

if [ "$ip_addr" != "dhcp" ]; then
    echo "  ip_netmask = $ip_netmask"
    echo "  ip_broadcast = $ip_broadcast"
    echo "  ip_gateway = $ip_gateway"
    echo "  ip_nameservers = $ip_nameservers"
fi

echo

echo -n "Waiting for eth0... "

for i in `seq 1 10`; do

    ifconfig eth0 &>/dev/null
    if [ $? -eq 0 ]; then
        echo "OK"
        break
    fi

    if [ $i -eq 10 ]; then
        echo "FAILED"
        exit
    fi

    sleep 1

    echo -n "$i.. "
done

if [ "$ip_addr" = "dhcp" ]; then
    echo -n "Configuring eth0 with DHCP... "

    udhcpc -i eth0 &>/dev/null
    if [ $? -eq 0 ]; then
        ifconfig eth0 | fgrep addr: | awk '{print $2}' | cut -d: -f2
    else
        echo "FAILED"
        exit
    fi
else
    echo -n "Configuring eth0 with static ip $ip_addr... "
    ifconfig eth0 up inet $ip_addr netmask $ip_netmask broadcast $ip_broadcast || exit
    route add default gw $ip_gateway || exit
    echo -n > /etc/resolv.conf
    for i in $ip_nameservers; do
        echo "nameserver $i" >> /etc/resolv.conf
    done
    echo "OK"
fi

echo -n "Configuring the clock using rdate... "
rdate $timeserver &>/dev/null
if [ $? -eq 0 ]; then
    date
else
    echo "failed (not fatal)"
    exit
fi

echo -n "Applying new partition table... "
dd if=/dev/zero of=/dev/mmcblk0 bs=512 count=1 &>/dev/null
fdisk /dev/mmcblk0 &>/dev/null <<EOF
n
p
1

$bootsize
t
b
n
p
2


w
EOF
echo "OK"

echo -n "Initializing /boot as vfat... "
mkfs.vfat /dev/mmcblk0p1 &>/dev/null || exit
echo "OK"

echo -n "Initializing / as ext4... "
mkfs.ext4 /dev/mmcblk0p2 &>/dev/null || exit
echo "OK"

echo -n "Mounting new filesystems... "
mount /dev/mmcblk0p2 /rootfs -o noatime,data=writeback,nobarrier,noinit_itable || exit
mkdir /rootfs/boot || exit
mount /dev/mmcblk0p1 /rootfs/boot || exit
echo "OK"

echo -n "Copying /boot files in... "
cp /bootfs/* /rootfs/boot || exit
sync
echo "OK"

echo "Starting install process..."
cdebootstrap-static --arch=armhf --allow-unauthenticated $cdebootstrap_cmdline $release /rootfs $mirror || exit

# allow root login
echo -n "Configuring installed system... "
echo -n root:$rootpw | chroot /rootfs /usr/sbin/chpasswd || exit

# default mounts
echo "/dev/mmcblk0p1 /boot vfat defaults 0 0" > /rootfs/etc/fstab || exit
echo "/dev/mmcblk0p2 / ext4 errors=remount-ro,noatime 0 0" >> /rootfs/etc/fstab || exit

# use ram tmpfs by default
echo "RAMTMP=yes" >> /rootfs/etc/default/tmpfs 

# default hostname
echo -n $hostname > /rootfs/etc/hostname || exit
echo "127.0.0.1 localhost $hostname" > /rootfs/etc/hosts || exit

# networking
echo "auto lo" > /rootfs/etc/network/interfaces || exit
echo "iface lo inet loopback" >> /rootfs/etc/network/interfaces || exit

# eth0 config
echo "auto eth0" >> /rootfs/etc/network/interfaces || exit
if [ "$ip_addr" = "dhcp" ]; then
    echo "iface eth0 inet dhcp" >> /rootfs/etc/network/interfaces || exit
else
    echo "iface eth0 inet static" >> /rootfs/etc/network/interfaces || exit
    echo "    address $ip_addr" >> /rootfs/etc/network/interfaces || exit
    echo "    netmask $ip_netmask" >> /rootfs/etc/network/interfaces || exit
    echo "    broadcast $ip_broadcast" >> /rootfs/etc/network/interfaces || exit
    echo "    gateway $ip_gateway" >> /rootfs/etc/network/interfaces || exit

    cp /etc/resolv.conf /rootfs/etc/ || exit
fi

# there is no hw clock on rpi
echo "HWCLOCKACCESS=no" >> /rootfs/etc/default/hwclock || exit

# allow ntpd to set time on boot
if [ -e /rootfs/etc/default/openntpd ]; then
    echo "DAEMON_OPTS=\"-f /etc/openntpd/ntpd.conf -s\"" > /rootfs/etc/default/openntpd || exit
fi

echo "OK"

echo "Configuring bootloader to start the installed system..."
mv /rootfs/boot/config.txt /rootfs/boot/config-reinstall.txt

# remove cdebootstrap-helper-rc.d which prevents rc.d scripts from running
echo -n "Removing cdebootstrap-helper-rc.d... " 
chroot /rootfs /usr/bin/dpkg -r cdebootstrap-helper-rc.d &>/dev/null || exit
echo "OK"

# save current time if fake-hwclock
echo "Saving current time for fake-hwclock..."
sync # synchronize before saving time to make it "more accurate"
date +"%Y-%m-%d %H:%M:%S" > /rootfs/etc/fake-hwclock.data

if [ -e /bootfs/post-install.txt ]; then
    echo "Running post-install.txt..."
    source /bootfs/post-install.txt
fi

echo "Unmounting filesystems..."
umount /rootfs/boot
umount /rootfs

echo "Finished! Rebooting to installed system."
reboot
